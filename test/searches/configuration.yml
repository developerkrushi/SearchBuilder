version: 1.0.0

tenant:
  name: INFOARCHIVE
  configure: use existing

application:
  name: Stellent
  configure: use existing

database:
  name: Stellent-sql-db
  configure: use existing

resultMaster:
  application: Stellent
  panels:
  - name: Inline Panel
  - name: Main Panel
    tabs:
    - name: _ia_Default_Main_tab_
      columns:
      - name: DDOCID
        contentLinkType: CUSTOM
        label: Document Id
        type: xquery reference
      - name: DORIGINALNAME
        contentLinkType: CUSTOM
        label: Document Name
        type: xquery reference
      - name: FILE_NAME
        cellLabel: Click Here
        contentLinkType: CUSTOM
        dataType: CID
        label: Download
        type: content
  - name: Side Panel
  tenant: INFOARCHIVE

search:
  name: test
  aic: null
  description: test search
  query: null
  schema: CNTR_MAIN
  state: ${search.state:published}

searchComposition:
  name: Set 1

xform:
  name: test
  form:
    resource: xform-test.html

xquery:
  name: test
  application: null
  query: |
    (:~
    ::
    :: Application Name: Stellent
    ::
    :: Search Name: test
    ::
    ::
    :: Copyright: Medtronic
    ::
    :: @author Krushivardhan Reddy
    :: @since Jul 23, 2021
    :: @version 1.0
    :)
    
    (: :::::::::::::::::: Declaration and Initialization  of Variables, Namespaces :::::::::::::::::::: :)
    
    declare namespace ia = (: :) "urn:x-emc:ia:schema:fn";
    declare namespace table = (: :)  "urn:x-emc:ia:schema:table";
    declare variable $page external;
    declare variable $size external;
    declare variable $DDOCID external := '';
    declare variable $DORIGINALNAME external := '';
    
    declare variable $limit := 2000;
    
    declare function ia:decrypt-value($columnValue as xs:string*) as xs:string* external;
    
    (: :::::::::::::::::::::::::::::::: Function definitions :::::::::::::::::::::::::::::::::::: :)
    
    declare function local:addClause($var as xs:string*, $expr as xs:string) as xs:string* {
        if (empty($var) or $var = "" or normalize-space($var) = "") then ""
        else concat("[", $expr , "]") 
    };
    
    declare function local:getResultsPage($rows, $page, $size) {
        let $offset := $page * $size let $total := count($rows)
        return   <results total="{ $total }">    {
                   for $row in subsequence($rows, $offset + 1, $size)
                     return $row
                   }
                 </results>
    };
    
    
    (: :::::::::::::::::::::::::::::::: Main Function definition :::::::::::::::::::::::::::::::::::: :)
    
    declare function local:MAIN($DDOCID, $DORIGINALNAME, $limit, $page, $size) {
    
        let $import := 'declare namespace ia = (: :) "urn:x-emc:ia:schema:fn";
                        declare namespace table = (: :)  "urn:x-emc:ia:schema:table";'
    
    	let $query := concat(
    				" for $DOCUMENTS in CNTR_MAIN/DOCUMENTS/ROW",
    				local:addClause($DDOCID, concat("DDOCID = '", $DDOCID, "'")),
    				local:addClause($DORIGINALNAME, concat("DORIGINALNAME = '", $DORIGINALNAME, "'")),
    				" for $UNSTRUCTURED_DATA in CNTR_MAIN/UNSTRUCTURED_DATA/ROW[FILE_NAME=$DOCUMENTS/DORIGINALNAME]",
    				" return ")
    
    	let $return := "<result
    				DDOCID = '{$DOCUMENTS/DDOCID/string()}'
    				DORIGINALNAME = '{$DOCUMENTS/DORIGINALNAME/string()}'
    				FILE_NAME = '{$UNSTRUCTURED_DATA/FILE_NAME/@ref/string()}'
    				/>"
    
    	let $results := subsequence(xhive:evaluate(concat($import,$query,$return)),1,$limit)
    
    	let $finalResults := (for $x in $results
    						  return
    						  <row id='{string($x/@table:id)}'>
    						  <column name='DDOCID'>{ia:decrypt-value($x/@DDOCID/string())}</column>
    						  <column name='DORIGINALNAME'>{$x/@DORIGINALNAME/string()}</column>
    						  <column name='FILE_NAME'>{$x/@FILE_NAME/string()}</column>
    						  </row>)
    
    	return local:getResultsPage($finalResults, $page, $size)
    };
    
    (: :::::::::::::::::::::::::::::::: Main Function Call :::::::::::::::::::::::::::::::::::: :)
    local:MAIN($DDOCID, $DORIGINALNAME, $limit, $page, $size)
